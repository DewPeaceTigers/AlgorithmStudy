'''
(0, 0)->(1,1) 로 이동할때
대각선으로 가로지르는 방법<가로한번 세로한번 이면
최대한 대각선으로 이동 후에 가로, 세로 한번씩 이동하면 최소시간
'''


x, y, w, s = map(int, input().split())

'''
틀린 풀이
if w+w > s : #대각선으로 이동하는게 가로 한번 세로 한번 보다 빠른 경우
    if x <= y : #최대한 대각선으로 이동 후에 한칸씩 이동
        print(x*s+(y-x)*w)
    else :
        print(y*s+(x-y)*w)
else :
    print((x+y)*w)
    '''
'''
2, 0, 12, 10을 입력 받았을 때
(0, 0)->(1, 1)->(2, 0)
모두 대각선 이동했을 경우가 최소
'''
move1=(x+y)*w #좌우로만 이동하는 경우

#move2는 대각선으로만 이동하는 경우
if (x+y) % 2 == 0 : #짝수일때는 대각선으로만 이동 가능
    move2=max(x, y)*s
else : #홀수일때는 대각선으로 이동후 마지막은 가로 혹은 세로 한번 이동 필요
    move2=(max(x, y)-1)*s + w
move3=min(x, y)*s + (max(x, y)-min(x, y))*w #가능한 만큼 대각선 이동 후 나머지는 가로 혹은 세로 이동

print(min(move1, move2, move3))

